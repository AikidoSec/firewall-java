
plugins {
    id 'java'
}

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

group = 'dev.aikido'
version = '1.1-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    implementation 'net.bytebuddy:byte-buddy:1.15.4'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
    implementation 'com.github.jnr:jnr-ffi:2.2.17'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
            'Premain-Class': 'dev.aikido.AikidoAgent.Agent',
            'Agent-Class': 'dev.aikido.AikidoAgent.Agent',
            'Can-Redefine-Classes': 'false',
            'Can-Retransform-Classes': 'false',
            'Can-Set-Native-Method-Prefix': 'false'
        )
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
        exclude "META-INF/LICENSE"
        exclude "META-INF/NOTICE"
        exclude "module-info.class"
        exclude "META-INF/versions/9/module-info.class"
        exclude "META-INF/versions/11/module-info.class"
    }
    with jar
}
name: Run Gradle Tests

on:
  push:
    branches:
      - main
  pull_request:


jobs:
  test-and-coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      # Setup docker :
      - name: Install Docker on macOS
        if: runner.os == 'macOS'
        run: |
          brew install --cask docker
          open /Applications/Docker.app
          # Wait for Docker to start
          while ! docker system info; do sleep 1; done

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Add local.aikido.io to hosts file (Linux and macOS)
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
        run: |
          echo "127.0.0.1 local.aikido.io" | sudo tee -a /etc/hosts
      - name: Add local.aikido.io to hosts file (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          echo "127.0.0.1 local.aikido.io" | Out-File -Append -FilePath C:\Windows\System32\drivers\etc\hosts -Encoding ASCII

      - name: Download binaries & Build with Gradle
        working-directory: ./
        run: chmod +x gradlew && make binaries && make build && make create_temp_dir_for_gh
      - name: Start databases
        working-directory: ./sample-apps/databases
        run: docker compose up --build -d && sleep 10
      - name: Start mock server
        working-directory: ./end2end/server
        run: docker build -t mock_core . && docker run --name mock_core -d -p 5000:5000 mock_core

      - name: Run test cases
        working-directory: ./
        run: chmod +x gradlew && make test

      - name: Run coverage with Gradle
        working-directory: ./
        run: chmod +x gradlew && ./gradlew clean && make cov
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./agent_api/build/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
        if: matrix.os == 'ubuntu-latest'
package dev.aikido.agent_api.vulnerabilities;

import dev.aikido.agent_api.background.Endpoint;
import dev.aikido.agent_api.context.ContextObject;
import dev.aikido.agent_api.storage.Configuration;

import java.util.List;

import static dev.aikido.agent_api.helpers.patterns.MatchEndpoints.matchEndpoints;
import static dev.aikido.agent_api.storage.ConfigStore.getConfig;

public final class SkipVulnerabilityScanDecider {
    private SkipVulnerabilityScanDecider() {}
    public static boolean shouldSkipVulnerabilityScan(ContextObject context) {
        if (context == null) {
            return true;
        }
        Configuration config = getConfig();
        if (config != null) {
            List<Endpoint> matchedEndpoints = matchEndpoints(context.getRouteMetadata(), config.getEndpoints());
            if (matchedEndpoints != null) {
                if (matchedEndpoints.stream().anyMatch(Endpoint::protectionForcedOff)) {
                    // Protection is forced off on one of more of the matched endpoints :
                    return true;
                }
            }
        }
        return false;
    }
}

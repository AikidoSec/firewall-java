plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

jacoco {
    toolVersion "0.8.12"
    reportsDirectory = layout.buildDirectory.dir('jacoco')
}

dependencies {
    implementation 'com.github.seancfoley:ipaddress:5.5.1'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.1.0' // For Context object (Spring Boot)
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2' // For JWTs
    implementation 'com.github.jnr:jnr-ffi:2.2.17'
    // Junixsocket imports :
    implementation 'com.kohlschutter.junixsocket:junixsocket-core:2.10.1'
    implementation 'com.kohlschutter.junixsocket:junixsocket-server:2.10.1'
    // Log4j 2 :
    implementation 'org.apache.logging.log4j:log4j-core:2.21.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.21.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.0.0'
    testImplementation 'org.junit-pioneer:junit-pioneer:2.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    jvmArgs '--add-opens', 'java.base/java.util=ALL-UNNAMED'
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
    systemProperty 'AIK_agent_dir', "${project.rootDir}/dist"
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = false
    }
    dependsOn test // tests are required to run before generating the report
}


shadowJar {
    mergeServiceFiles()
    manifest {
    }
}